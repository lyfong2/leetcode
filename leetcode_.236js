/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @param {TreeNode} p
 * @param {TreeNode} q
 * @return {TreeNode}
 */
var lowestCommonAncestor = function(root, p, q) {
    if(root === null || root === p || root === q) return root;
    
    let left = lowestCommonAncestor(root.left, p, q);
    let right = lowestCommonAncestor(root.right, p, q);
    
    if(left !== null && right !== null){
        return root;
    }
    
    return left === null ? right : left;    
};
// 思路:
// 找共同祖先, 不應該先從prorder或這種從上往下找, 或是inorder這些方式去找
// 要用post-order(左,右,根)這些子模塊開始找, 葉子節點, 從底層往上推

// recursive到最後一個節點其實不是回傳那個節點的值, 而是回傳null
